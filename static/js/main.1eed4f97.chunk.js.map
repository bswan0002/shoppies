{"version":3,"sources":["components/shoppies_components/SearchProgressBar.js","components/shoppies_components/MovieSearch.js","components/shoppies_components/ResultCard.js","components/shoppies_components/ResultsPagination.js","components/shoppies_components/ResultsList.js","components/shoppies_components/NominationsList.js","components/shoppies_components/FailedSearchAlert.js","components/shoppies_components/SuccessfulSearchAlert.js","components/shoppies_components/Celebration.js","components/Shoppies.js","custom_hooks/useTrait.js","components/TopBar.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["SearchProgressBar","searchProgress","ProgressBar","now","Math","round","get","MovieSearch","title","setTitle","handleSubmit","Card","className","Body","Title","Form","onSubmit","Row","InputGroup","Control","placeholder","value","onChange","e","target","Append","Text","onClick","style","cursor","icon","faSearch","ResultCard","movie","nominations","setNominations","useState","movieDetails","setMovieDetails","useEffect","fetch","imdbID","process","then","res","json","data","Poster","faImage","src","alt","width","Year","foundIndex","Ratings","findIndex","rating","Source","faStar","Value","getImdbRating","OverlayTrigger","trigger","delay","hide","placement","overlay","props","Popover","Content","Director","Actors","Plot","Rated","Runtime","Genre","Released","Country","Button","some","nomination","disabled","ResultsPagination","pageCount","page","setPage","pageView","setPageView","Pagination","pages","paginationItems","pageNum","push","Item","active","First","Prev","Ellipsis","slice","Next","Last","renderPaginationItems","ResultsList","results","map","i","length","ListGroup","paddingTop","marginTop","id","newNominations","filter","handleRemove","FailedSearchAlert","showFailedSearch","setShowFailedSearch","Alert","variant","onClose","dismissible","SuccessfulSearchAlert","showSuccessfulSearch","setShowSuccessfulSearch","numResults","Celebration","showCelebration","setShowCelebration","useWindowSize","height","Modal","show","onHide","Header","closeButton","Footer","Shoppies","setResults","successfulSearchTitle","setSuccessfulSearchTitle","failedSearchTitle","setFailedSearchTitle","initialValue","trait","updateTrait","current","set","newValue","useTrait","handleResponses","responses","paginatedFetch","ok","Response","Search","parseInt","totalResults","Container","preventDefault","Col","xs","sm","lg","NominationsList","TopBar","faReact","color","faBootstrap","href","faGithub","faLinkedin","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAMeA,EAJW,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC3B,OAAO,cAACC,EAAA,EAAD,CAAaC,IAAKC,KAAKC,MAA6B,IAAvBJ,EAAeK,UCmCtCC,EA/BK,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,aAAcT,EAAqB,EAArBA,eACpD,OACE,eAACU,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACE,eAACD,EAAA,EAAKE,KAAN,WACE,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACC,EAAA,EAAD,CAAMC,SAAUN,EAAhB,SACE,cAACK,EAAA,EAAKE,IAAN,UACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAKI,QAAN,CACEC,YAAY,yBACZC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAASc,EAAEC,OAAOH,UAErC,cAACH,EAAA,EAAWO,OAAZ,UACE,cAACP,EAAA,EAAWQ,KAAZ,CACEC,QAASjB,EACTE,UAAU,SACVgB,MAAO,CAAEC,OAAQ,WAHnB,SAKE,cAAC,IAAD,CAAiBC,KAAMC,oBAOnC,cAAC,EAAD,CAAmB9B,eAAgBA,Q,gCCgE1B+B,EA5FI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAAqB,EACrBC,mBAAS,IADY,mBACtDC,EADsD,KACxCC,EADwC,KAG7DC,qBAAU,WACRC,MAAM,yCAAD,OACsCP,EAAMQ,OAD5C,mBAC6DC,aAE/DC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUR,EAAgBQ,QACjC,CAACb,EAAMQ,SAiCV,OACE,cAAC9B,EAAA,EAAD,CAAMC,UAAU,aAAhB,SACE,sBAAKA,UAAU,+BAAf,UACoB,QAAjBqB,EAAMc,OACL,cAAC,IAAD,CACEjB,KAAMkB,IACNpC,UAAU,kCAGZ,qBAAKqC,IAAKhB,EAAMc,OAAQG,IAAI,SAAStB,MAAO,CAAEuB,MAAO,UAGvD,sBAAKvC,UAAU,yEAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,gCACE,uBAAMA,UAAU,kBAAhB,UAAmCqB,EAAMnB,MAAzC,OACA,uBAAMF,UAAU,iBAAhB,cAAmCqB,EAAMmB,KAAzC,UAEF,mBAAGxC,UAAU,OAAb,SAjDY,WAAO,IAAD,EACtByC,EAAU,UAAGhB,EAAaiB,eAAhB,aAAG,EAAsBC,WACrC,SAACC,GAAD,MAA8B,4BAAlBA,EAAOC,UAGrB,OAAOJ,GAAc,EACnB,qCACE,cAAC,IAAD,CAAiBvB,KAAM4B,IAAQ9C,UAAU,SACxCyB,EAAaiB,QAAQD,GAAYM,SAElC,KAuCyBC,QAEvB,sBAAKhD,UAAU,2CAAf,UACE,cAACiD,EAAA,EAAD,CACEC,QAAS,CAAC,QAAS,SACnBC,MAAO,CAAEC,KAAM,KACfC,UAAU,MACVC,QAvCI,SAACC,GACf,OACE,eAACC,EAAA,EAAD,2BAAaD,GAAb,cACE,cAACC,EAAA,EAAQtD,MAAT,UAAgBmB,EAAMnB,QACtB,eAACsD,EAAA,EAAQC,QAAT,WACE,8CAAiBhC,EAAaiC,YAC9B,2CAAcjC,EAAakC,UAC3B,4BAAIlC,EAAamC,OACjB,sCAAOnC,EAAaoC,MAApB,cAA+BpC,EAAaqC,QAA5C,cAAyDrC,EAAasC,MAAtE,cAAiFtC,EAAauC,SAA9F,aAA2GvC,EAAawC,QAAxH,eA2BE,SAME,8BACE,cAACC,EAAA,EAAD,+BA7CL5C,EAAY6C,MAAK,SAACC,GAAD,OAAgBA,EAAWvC,SAAWR,EAAMQ,UAiD1D,cAACqC,EAAA,EAAD,CAAQlE,UAAU,gBAAgBqE,UAAQ,EAA1C,sBAIA,cAACH,EAAA,EAAD,CACElE,UAAU,gBACVe,QAAS,kBAAMQ,EAAe,GAAD,mBAAKD,GAAL,CAAkBD,MAFjD,kC,QCCCiD,EAjFW,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EAC1BjD,mBAAS,GADiB,mBACnDkD,EADmD,KACzCC,EADyC,KA8E1D,OAAO,cAACC,EAAA,EAAD,UAnEuB,WAG5B,IAFA,IAToBC,EAShBC,EAAkB,GADY,WAGzBC,GACPD,EAAgBE,KACd,cAACJ,EAAA,EAAWK,KAAZ,CAEEC,OAAQV,IAASO,EACjBhE,QAAS,WACP0D,EAAQM,GACRJ,EAAYI,IALhB,SAQGA,GAPIA,KAHFA,EAAU,EAAGA,GAAWR,EAAWQ,IAAY,EAA/CA,GAeT,OAAIR,GAAa,EACRO,EAGL,qCACE,cAACF,EAAA,EAAWO,MAAZ,CACEpE,QAAS,WACP0D,EAAQ,GACRE,EAAY,MAGhB,cAACC,EAAA,EAAWQ,KAAZ,CACErE,QAAS,WACHyD,EAAO,IACTC,EAAQD,EAAO,GACfG,EAAYH,EAAO,OAIxBE,EAAW,EACV,cAACE,EAAA,EAAWS,SAAZ,CAAqBtE,QAAS,kBAAM4D,EAAYD,EAAW,MAE3D,cAACE,EAAA,EAAWS,SAAZ,CAAqBhB,UAAQ,KAhDjBQ,EAkDAC,EAjDhBJ,EAAW,IAAM,EAAUG,EAAMS,MAAMZ,EAAW,EAAGA,GAClDG,EAAMS,MACXZ,EAAYA,EAAW,EACvBA,EAAW,EAAKA,EAAW,IA+CtBA,EAAYA,EAAW,EAAKH,EAC3B,cAACK,EAAA,EAAWS,SAAZ,CAAqBtE,QAAS,kBAAM4D,EAAYD,EAAW,MAE3D,cAACE,EAAA,EAAWS,SAAZ,CAAqBhB,UAAQ,IAE/B,cAACO,EAAA,EAAWW,KAAZ,CACExE,QAAS,WACHyD,EAAOD,IACTE,EAAQD,EAAO,GACfG,EAAYH,EAAO,OAIzB,cAACI,EAAA,EAAWY,KAAZ,CACEzE,QAAS,WACP0D,EAAQF,GACRI,EAAYJ,SAQJkB,MC1CPC,EAjCK,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,QAASrE,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAAqB,EACxCC,mBAAS,GAD+B,mBACzDgD,EADyD,KACnDC,EADmD,KAGhE9C,qBAAU,WACR8C,EAAQ,KACP,CAACkB,IAaJ,OACE,qCACE,yCACA,qBAAK3F,UAAU,cAAf,SAbK2F,EAAQnB,EAAO,GAAGoB,KAAI,SAACvE,EAAOwE,GAAR,OAC3B,cAAC,EAAD,CAEExE,MAAOA,EACPC,YAAaA,EACbC,eAAgBA,GAHXF,EAAMQ,OAASgE,QAYtB,qBAAK7F,UAAU,qCAAf,SACE,cAAC,EAAD,CACEuE,UAAWoB,EAAQG,OACnBtB,KAAMA,EACNC,QAASA,U,QCQJiB,EAtCK,SAAC,GAAqC,IAAnCpE,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eA8BlC,OACE,qCACE,6CACA,cAACwE,EAAA,EAAD,UAxBKzE,EAAYsE,KAAI,SAACxB,EAAYyB,GAClC,OACE,cAACE,EAAA,EAAUd,KAAX,UACE,sBAAKjF,UAAU,iCAAf,UACE,oBAAGgB,MAAO,CAAEgF,WAAY,QAAxB,UACG5B,EAAWlE,MACZ,uBAAMF,UAAU,iBAAhB,eAAoCoE,EAAW5B,KAA/C,UAGF,cAAC0B,EAAA,EAAD,CACElE,UAAU,mBACVgB,MAAO,CAAEiF,UAAW,UACpBlF,QAAS,kBApBA,SAACmF,GACpB,IAAIC,EAAiB7E,EAAY8E,QAC/B,SAAChC,GAAD,OAAgBA,EAAWvC,SAAWqE,KAExC3E,EAAe4E,GAgBUE,CAAajC,EAAWvC,SAHzC,wBAPiBuC,EAAayB,Y,QCQ3BS,EAnBW,SAAC,GAIpB,IAHLC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,oBACA5G,EACI,EADJA,MAEA,OAAI2G,EAEA,eAACE,EAAA,EAAD,CACEC,QAAQ,SACRC,QAAS,kBAAMH,GAAoB,IACnCI,aAAW,EAHb,mCAKyBhH,EALzB,OASG,MCIMiH,EApBe,SAAC,GAKxB,IAJLC,EAII,EAJJA,qBACAC,EAGI,EAHJA,wBACAnH,EAEI,EAFJA,MACAoH,EACI,EADJA,WAEA,OAAIF,EAEA,eAACL,EAAA,EAAD,CACEC,QAAQ,UACRC,QAAS,kBAAMI,GAAwB,IACvCH,aAAW,EAHb,UAKGI,EALH,IAK+B,IAAfA,EAAmB,QAAU,SAL7C,eAKmEpH,EALnE,OASG,M,0CCUMqH,EAxBK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,gBAAiBC,EAAyB,EAAzBA,mBAAyB,EACrCC,MAAlB7E,EADuD,EACvDA,MAAO8E,EADgD,EAChDA,OAEf,OACE,qCACGH,GAAmB,cAAC,IAAD,CAAU3E,MAAOA,EAAO8E,OAAQA,IACpD,eAACC,EAAA,EAAD,CAAOC,KAAML,EAAiBM,OAAQ,kBAAML,GAAmB,IAA/D,UACE,cAACG,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMpH,MAAP,2CAEF,cAACoH,EAAA,EAAMrH,KAAP,sGAIA,cAACqH,EAAA,EAAMK,OAAP,UACE,cAACzD,EAAA,EAAD,CAAQwC,QAAQ,YAAY3F,QAAS,kBAAMoG,GAAmB,IAA9D,4BCPV,IAgHeS,EAhHE,WAAO,IAAD,EACKpG,mBAAS,IADd,mBACd5B,EADc,KACPC,EADO,OAES2B,mBAAS,IAFlB,mBAEdmE,EAFc,KAELkC,EAFK,OAGmCrG,oBAAS,GAH5C,mBAGdsF,EAHc,KAGQC,EAHR,OAI2BvF,oBAAS,GAJpC,mBAId+E,EAJc,KAIIC,EAJJ,OAKqChF,mBAAS,IAL9C,mBAKdsG,EALc,KAKSC,EALT,OAM6BvG,mBAAS,IANtC,mBAMdwG,EANc,KAMKC,EANL,OAOiBzG,mBAAS,IAP1B,mBAOdF,EAPc,KAODC,EAPC,OAQyBC,oBAAS,GARlC,mBAQd0F,EARc,KAQGC,EARH,KASf9H,ECpBO,SAAkB6I,GAAe,IAAD,EAChB1G,mBAAS0G,GADO,mBACtCC,EADsC,KAC/BC,EAD+B,KAGzCC,EAAUF,EAUd,MAAO,CACLzI,IATU,kBAAM2I,GAUhBC,IARU,SAACC,GAGX,OAFAF,EAAUE,EACVH,EAAYG,GACLF,IDUcG,CAAS,GAEhC7G,qBAAU,WACmB,IAAvBL,EAAYwE,QACdqB,GAAmB,KAEpB,CAAC7F,IAEJ,IAAMmH,EAAkB,SAACC,GACE,IAArBA,EAAU5C,QACZ+B,EAAW,IACXI,EAAqBrI,GACrB4G,GAAoB,GACpBnH,EAAeiJ,IAAI,KAEnBT,EAAWa,GACXlC,GAAoB,GACpBuB,EAAyBnI,GACzBmH,GAAwB,KAItB4B,EAAiB,SAAjBA,IAAgD,IAA9BnE,EAA6B,uDAAtB,EAAGkE,EAAmB,uDAAP,GAC5C9G,MAAM,yCAAD,OACsChC,EADtC,iBACoD4E,EADpD,mBACmE1C,aAErEC,MAAK,SAACC,GACL,OAAOA,EAAI4G,IAAM5G,EAAIC,UAEtBF,MAAK,SAACG,GACL,GAAsB,SAAlBA,EAAK2G,SAMP,OALAH,EAAU1D,KAAV,YAAmB9C,EAAK4G,SACxBzJ,EAAeiJ,IACO,GAAnBI,EAAU5C,OAAeiD,SAAS7G,EAAK8G,eAE1CxE,IACOmE,EAAenE,EAAMkE,GAE5BD,EAAgBC,OAaxB,OACE,eAACO,EAAA,EAAD,CAAWjJ,UAAU,OAArB,UACE,cAAC,EAAD,CACEkH,gBAAiBA,EACjBC,mBAAoBA,IAEtB,eAAC9G,EAAA,EAAD,CAAKL,UAAU,iCAAf,UACE,oBAAIA,UAAU,YAAd,0BACA,cAAC,EAAD,CACEJ,MAAOoI,EACPzB,iBAAkBA,EAClBC,oBAAqBA,IAEvB,cAAC,EAAD,CACE5G,MAAOkI,EACPd,WACErB,EAAQG,OAAS,GACM,IAAtBH,EAAQG,OAAS,GAAUH,EAAQA,EAAQG,OAAS,GAAGA,OAE1DgB,qBAAsBA,EACtBC,wBAAyBA,OAG7B,cAAC,EAAD,CACEnH,MAAOA,EACPC,SAAUA,EACVC,aAlCe,SAACa,GACpBA,EAAEuI,iBACF7J,EAAeiJ,IAAI,GACnB9B,GAAoB,GACpBO,GAAwB,GACxB4B,KA8BItJ,eAAgBA,IAElB,eAACgB,EAAA,EAAD,WACGsF,EAAQG,OAAS,GAChB,cAACqD,EAAA,EAAD,CAAKnJ,UAAU,OAAOoJ,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAA1C,SACE,cAAC,EAAD,CACE3D,QAASA,EACTrE,YAAaA,EACbC,eAAgBA,MAIrBD,EAAYwE,OAAS,GACpB,cAACqD,EAAA,EAAD,CAAKnJ,UAAU,OAAf,SACE,cAACuJ,EAAD,CACEjI,YAAaA,EACbC,eAAgBA,aEhHfiI,EAJA,WACb,OAAO,qBAAKxJ,UAAU,Y,QCoDT2H,EA3CA,WACb,OACE,wBAAQ3H,UAAU,SAAlB,SACE,eAACiJ,EAAA,EAAD,WACE,cAAC5I,EAAA,EAAD,CAAKL,UAAU,gCAAf,SACE,oBAAIA,UAAU,kBAAd,+DAKF,cAACK,EAAA,EAAD,CAAKL,UAAU,gCAAf,SACE,2CACa,IACV,cAAC,IAAD,CAAiBkB,KAAMuI,IAASzI,MAAO,CAAE0I,MAAO,aAAiB,IAFpE,sBAGsB,IAElB,cAAC,IAAD,CACExI,KAAMyI,IACN3I,MAAO,CAAE0I,MAAO,aAElB,IATJ,iBAaF,eAACrJ,EAAA,EAAD,CAAKL,UAAU,gCAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,gEAEF,sBAAKA,UAAU,OAAf,UACE,mBAAG4J,KAAK,6BAAR,iCACA,mBAAGA,KAAK,gCAAR,SACE,cAAC,IAAD,CAAiB1I,KAAM2I,IAAU7J,UAAU,WAE7C,mBAAG4J,KAAK,yCAAR,SACE,cAAC,IAAD,CAAiB1I,KAAM4I,oBCxBtBC,EAZH,WACV,OACE,qCACE,sBAAK/J,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IAFF,OAIA,cAAC,EAAD,QCHSgK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnI,MAAK,YAAkD,IAA/CoI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1eed4f97.chunk.js","sourcesContent":["import { ProgressBar } from \"react-bootstrap\";\n\nconst SearchProgressBar = ({ searchProgress }) => {\n  return <ProgressBar now={Math.round(searchProgress.get() * 100)} />;\n};\n\nexport default SearchProgressBar;\n","// Libraries\nimport { Card, Form, InputGroup } from \"react-bootstrap\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// Components\nimport SearchProgressBar from \"./SearchProgressBar\";\n\nconst MovieSearch = ({ title, setTitle, handleSubmit, searchProgress }) => {\n  return (\n    <Card className=\"mt-4\">\n      <Card.Body>\n        <Card.Title>Movie Search</Card.Title>\n        <Form onSubmit={handleSubmit}>\n          <Form.Row>\n            <InputGroup>\n              <Form.Control\n                placeholder=\"Lookup Movies by Title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              ></Form.Control>\n              <InputGroup.Append>\n                <InputGroup.Text\n                  onClick={handleSubmit}\n                  className=\"ripple\"\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <FontAwesomeIcon icon={faSearch} />\n                </InputGroup.Text>\n              </InputGroup.Append>\n            </InputGroup>\n          </Form.Row>\n        </Form>\n      </Card.Body>\n      <SearchProgressBar searchProgress={searchProgress} />\n    </Card>\n  );\n};\n\nexport default MovieSearch;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Button, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { faImage, faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst ResultCard = ({ movie, nominations, setNominations }) => {\n  const [movieDetails, setMovieDetails] = useState({});\n\n  useEffect(() => {\n    fetch(\n      `https://www.omdbapi.com/?type=movie&i=${movie.imdbID}&apikey=${process.env.REACT_APP_OMDB_API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((data) => setMovieDetails(data));\n  }, [movie.imdbID]);\n\n  const getImdbRating = () => {\n    let foundIndex = movieDetails.Ratings?.findIndex(\n      (rating) => rating.Source === \"Internet Movie Database\"\n    );\n\n    return foundIndex >= 0 ? (\n      <>\n        <FontAwesomeIcon icon={faStar} className=\"gold\" />\n        {movieDetails.Ratings[foundIndex].Value}\n      </>\n    ) : null;\n  };\n\n  const isNominated = () => {\n    return nominations.some((nomination) => nomination.imdbID === movie.imdbID);\n  };\n\n  const popover = (props) => {\n    return (\n      <Popover {...props}>\n        <Popover.Title>{movie.Title}</Popover.Title>\n        <Popover.Content>\n          <p>Directed by: {movieDetails.Director}</p>\n          <p>Starring: {movieDetails.Actors}</p>\n          <p>{movieDetails.Plot}</p>\n          <p>{`${movieDetails.Rated} | ${movieDetails.Runtime} | ${movieDetails.Genre} | ${movieDetails.Released} (${movieDetails.Country})`}</p>\n        </Popover.Content>\n      </Popover>\n    );\n  };\n\n  return (\n    <Card className=\"resultcard\">\n      <div className=\"d-flex justify-content-start\">\n        {movie.Poster === \"N/A\" ? (\n          <FontAwesomeIcon\n            icon={faImage}\n            className=\"resultcard-imagenotfound ml-2\"\n          />\n        ) : (\n          <img src={movie.Poster} alt=\"poster\" style={{ width: \"8rem\" }} />\n        )}\n\n        <div className=\"pt-2 pl-2 moviecard-details d-flex flex-column justify-content-between\">\n          <div className=\"d-flex justify-content-between\">\n            <div>\n              <span className=\"moviecard-title\">{movie.Title} </span>\n              <span className=\"moviecard-year\">({movie.Year})</span>\n            </div>\n            <p className=\"mr-2\">{getImdbRating()}</p>\n          </div>\n          <div className=\"mb-2 mr-2 d-flex justify-content-between\">\n            <OverlayTrigger\n              trigger={[\"hover\", \"focus\"]}\n              delay={{ hide: 300 }}\n              placement=\"top\"\n              overlay={popover}\n            >\n              <div>\n                <Button>More Details</Button>\n              </div>\n            </OverlayTrigger>\n            {isNominated() ? (\n              <Button className=\"btn-secondary\" disabled>\n                Nominate\n              </Button>\n            ) : (\n              <Button\n                className=\"btn-secondary\"\n                onClick={() => setNominations([...nominations, movie])}\n              >\n                Nominate\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ResultCard;\n","import React, { useState } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\n\nconst ResultsPagination = ({ pageCount, page, setPage }) => {\n  const [pageView, setPageView] = useState(1);\n\n  const currentPages = (pages) => {\n    if (pageView % 5 === 0) return pages.slice(pageView - 5, pageView);\n    return pages.slice(\n      pageView - (pageView % 5),\n      pageView + 5 - (pageView % 5)\n    );\n  };\n\n  const renderPaginationItems = () => {\n    let paginationItems = [];\n\n    for (let pageNum = 1; pageNum <= pageCount; pageNum++) {\n      paginationItems.push(\n        <Pagination.Item\n          key={pageNum}\n          active={page === pageNum}\n          onClick={() => {\n            setPage(pageNum);\n            setPageView(pageNum);\n          }}\n        >\n          {pageNum}\n        </Pagination.Item>\n      );\n    }\n\n    if (pageCount <= 5) {\n      return paginationItems;\n    } else {\n      return (\n        <>\n          <Pagination.First\n            onClick={() => {\n              setPage(1);\n              setPageView(1);\n            }}\n          />\n          <Pagination.Prev\n            onClick={() => {\n              if (page > 1) {\n                setPage(page - 1);\n                setPageView(page - 1);\n              }\n            }}\n          />\n          {pageView > 5 ? (\n            <Pagination.Ellipsis onClick={() => setPageView(pageView - 5)} />\n          ) : (\n            <Pagination.Ellipsis disabled />\n          )}\n          {currentPages(paginationItems)}\n          {pageView + (pageView % 5) < pageCount ? (\n            <Pagination.Ellipsis onClick={() => setPageView(pageView + 5)} />\n          ) : (\n            <Pagination.Ellipsis disabled />\n          )}\n          <Pagination.Next\n            onClick={() => {\n              if (page < pageCount) {\n                setPage(page + 1);\n                setPageView(page + 1);\n              }\n            }}\n          />\n          <Pagination.Last\n            onClick={() => {\n              setPage(pageCount);\n              setPageView(pageCount);\n            }}\n          />\n        </>\n      );\n    }\n  };\n\n  return <Pagination>{renderPaginationItems()}</Pagination>;\n};\n\nexport default ResultsPagination;\n","// Libraries\nimport React, { useState, useEffect } from \"react\";\n// Components\nimport ResultCard from \"./ResultCard\";\nimport ResultsPagination from \"./ResultsPagination\";\n\nconst ResultsList = ({ results, nominations, setNominations }) => {\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    setPage(1);\n  }, [results]);\n\n  const renderResultCards = () => {\n    return results[page - 1].map((movie, i) => (\n      <ResultCard\n        key={movie.imdbID + i}\n        movie={movie}\n        nominations={nominations}\n        setNominations={setNominations}\n      />\n    ));\n  };\n\n  return (\n    <>\n      <h3>Results</h3>\n      <div className=\"resultslist\">{renderResultCards()}</div>\n      <div className=\"d-flex justify-content-center mt-2\">\n        <ResultsPagination\n          pageCount={results.length}\n          page={page}\n          setPage={setPage}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ResultsList;\n","import { ListGroup, Button } from \"react-bootstrap\";\n\nconst ResultsList = ({ nominations, setNominations }) => {\n  const handleRemove = (id) => {\n    let newNominations = nominations.filter(\n      (nomination) => nomination.imdbID !== id\n    );\n    setNominations(newNominations);\n  };\n\n  const renderNominations = () => {\n    return nominations.map((nomination, i) => {\n      return (\n        <ListGroup.Item key={nomination + i}>\n          <div className=\"d-flex justify-content-between\">\n            <p style={{ paddingTop: \"1rem\" }}>\n              {nomination.Title}\n              <span className=\"moviecard-year\"> ({nomination.Year})</span>\n            </p>\n\n            <Button\n              className=\"btn-danger mh-40\"\n              style={{ marginTop: \"0.5rem\" }}\n              onClick={() => handleRemove(nomination.imdbID)}\n            >\n              Remove\n            </Button>\n          </div>\n        </ListGroup.Item>\n      );\n    });\n  };\n  return (\n    <>\n      <h3>Nominations</h3>\n      <ListGroup>{renderNominations()}</ListGroup>\n    </>\n  );\n};\n\nexport default ResultsList;\n","import { Alert } from \"react-bootstrap\";\n\nconst FailedSearchAlert = ({\n  showFailedSearch,\n  setShowFailedSearch,\n  title,\n}) => {\n  if (showFailedSearch) {\n    return (\n      <Alert\n        variant=\"danger\"\n        onClose={() => setShowFailedSearch(false)}\n        dismissible\n      >\n        No results found for '{title}'\n      </Alert>\n    );\n  }\n  return null;\n};\n\nexport default FailedSearchAlert;\n","import { Alert } from \"react-bootstrap\";\n\nconst SuccessfulSearchAlert = ({\n  showSuccessfulSearch,\n  setShowSuccessfulSearch,\n  title,\n  numResults,\n}) => {\n  if (showSuccessfulSearch) {\n    return (\n      <Alert\n        variant=\"success\"\n        onClose={() => setShowSuccessfulSearch(false)}\n        dismissible\n      >\n        {numResults} {numResults === 1 ? \"movie\" : \"movies\"} found for '{title}'\n      </Alert>\n    );\n  }\n  return null;\n};\n\nexport default SuccessfulSearchAlert;\n","// Libraries\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst Celebration = ({ showCelebration, setShowCelebration }) => {\n  const { width, height } = useWindowSize();\n\n  return (\n    <>\n      {showCelebration && <Confetti width={width} height={height} />}\n      <Modal show={showCelebration} onHide={() => setShowCelebration(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>You've Made 5 Nominations!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Thank you for your nominations. The academy looks forward to reviewing\n          your selections.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowCelebration(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Celebration;\n","// Libraries\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n// Components\nimport MovieSearch from \"./shoppies_components/MovieSearch\";\nimport ResultsList from \"./shoppies_components/ResultsList\";\nimport NominationsList from \"./shoppies_components/NominationsList\";\nimport FailedSearchAlert from \"./shoppies_components/FailedSearchAlert\";\nimport SuccessfulSearchAlert from \"./shoppies_components/SuccessfulSearchAlert\";\nimport Celebration from \"./shoppies_components/Celebration\";\n// Custom Hooks\nimport useTrait from \"../custom_hooks/useTrait\";\n\nconst Shoppies = () => {\n  const [title, setTitle] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [showSuccessfulSearch, setShowSuccessfulSearch] = useState(false);\n  const [showFailedSearch, setShowFailedSearch] = useState(false);\n  const [successfulSearchTitle, setSuccessfulSearchTitle] = useState(\"\");\n  const [failedSearchTitle, setFailedSearchTitle] = useState(\"\");\n  const [nominations, setNominations] = useState([]);\n  const [showCelebration, setShowCelebration] = useState(false);\n  const searchProgress = useTrait(0);\n\n  useEffect(() => {\n    if (nominations.length === 5) {\n      setShowCelebration(true);\n    }\n  }, [nominations]);\n\n  const handleResponses = (responses) => {\n    if (responses.length === 0) {\n      setResults([]);\n      setFailedSearchTitle(title);\n      setShowFailedSearch(true);\n      searchProgress.set(0);\n    } else {\n      setResults(responses);\n      setShowFailedSearch(false);\n      setSuccessfulSearchTitle(title);\n      setShowSuccessfulSearch(true);\n    }\n  };\n\n  const paginatedFetch = (page = 1, responses = []) => {\n    fetch(\n      `https://www.omdbapi.com/?type=movie&s=${title}&page=${page}&apikey=${process.env.REACT_APP_OMDB_API_KEY}`\n    )\n      .then((res) => {\n        return res.ok && res.json();\n      })\n      .then((data) => {\n        if (data.Response === \"True\") {\n          responses.push([...data.Search]);\n          searchProgress.set(\n            (responses.length * 10) / parseInt(data.totalResults)\n          );\n          page++;\n          return paginatedFetch(page, responses);\n        } else {\n          handleResponses(responses);\n        }\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    searchProgress.set(0);\n    setShowFailedSearch(false);\n    setShowSuccessfulSearch(false);\n    paginatedFetch();\n  };\n\n  return (\n    <Container className=\"mt-4\">\n      <Celebration\n        showCelebration={showCelebration}\n        setShowCelebration={setShowCelebration}\n      />\n      <Row className=\"d-flex justify-content-between\">\n        <h1 className=\"darkgreen\">The Shoppies</h1>\n        <FailedSearchAlert\n          title={failedSearchTitle}\n          showFailedSearch={showFailedSearch}\n          setShowFailedSearch={setShowFailedSearch}\n        />\n        <SuccessfulSearchAlert\n          title={successfulSearchTitle}\n          numResults={\n            results.length > 0 &&\n            (results.length - 1) * 10 + results[results.length - 1].length\n          }\n          showSuccessfulSearch={showSuccessfulSearch}\n          setShowSuccessfulSearch={setShowSuccessfulSearch}\n        />\n      </Row>\n      <MovieSearch\n        title={title}\n        setTitle={setTitle}\n        handleSubmit={handleSubmit}\n        searchProgress={searchProgress}\n      />\n      <Row>\n        {results.length > 0 && (\n          <Col className=\"mt-4\" xs={12} sm={12} lg={6}>\n            <ResultsList\n              results={results}\n              nominations={nominations}\n              setNominations={setNominations}\n            />\n          </Col>\n        )}\n        {nominations.length > 0 && (\n          <Col className=\"mt-4\">\n            <NominationsList\n              nominations={nominations}\n              setNominations={setNominations}\n            />\n          </Col>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Shoppies;\n","import { useState } from \"react\";\n\nexport default function useTrait(initialValue) {\n  const [trait, updateTrait] = useState(initialValue);\n\n  let current = trait;\n\n  const get = () => current;\n\n  const set = (newValue) => {\n    current = newValue;\n    updateTrait(newValue);\n    return current;\n  };\n\n  return {\n    get,\n    set,\n  };\n}\n","const TopBar = () => {\n  return <div className=\"topbar\"></div>;\n};\n\nexport default TopBar;\n","// Libraries\nimport { Container, Row } from \"react-bootstrap\";\nimport {\n  faReact,\n  faBootstrap,\n  faGithub,\n  faLinkedin,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Container>\n        <Row className=\"d-flex justify-content-center\">\n          <h2 className=\"mt-4 foot-title\">\n            Shopify Fall 2021 Frontend Developer Internship\n          </h2>\n        </Row>\n\n        <Row className=\"d-flex justify-content-center\">\n          <p>\n            Powered by{\" \"}\n            {<FontAwesomeIcon icon={faReact} style={{ color: \"#5ec6e3\" }} />}{\" \"}\n            React | Styled with{\" \"}\n            {\n              <FontAwesomeIcon\n                icon={faBootstrap}\n                style={{ color: \"#8c5ad8\" }}\n              />\n            }{\" \"}\n            Bootstrap\n          </p>\n        </Row>\n        <Row className=\"d-flex justify-content-center\">\n          <div className=\"mr-4 footer-byline\">\n            <p>Made by Ben Swanson © 2021</p>\n          </div>\n          <div className=\"ml-4\">\n            <a href=\"mailto:bswan0002@gmail.com\">bswan0002@gmail.com</a>\n            <a href=\"https://github.com/bswan0002/\">\n              <FontAwesomeIcon icon={faGithub} className=\"mx-4\" />\n            </a>\n            <a href=\"https://www.linkedin.com/in/bswan0002/\">\n              <FontAwesomeIcon icon={faLinkedin} />\n            </a>\n          </div>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// Styles\nimport \"./App.css\";\nimport \"./custom.scss\";\n// Components\nimport Shoppies from \"./components/Shoppies\";\nimport TopBar from \"./components/TopBar\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"body\">\n        <TopBar />\n        <Shoppies />;\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}